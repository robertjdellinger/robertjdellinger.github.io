[build]
  command = """
    set -e
    echo "=== Starting Blog build process ==="
    echo "Node version: $(node --version)"
    echo "pnpm version: $(pnpm --version)"
    echo "Hugo version: $(hugo version)"
    echo "Go version: $(go version || echo 'Go not available')"
    
    echo "=== Installing dependencies ==="
    pnpm install --verbose
    
    echo "=== Running Hugo build ==="
    hugo --gc --minify -b $URL --logLevel debug --printI18nWarnings --printPathWarnings
    
    echo "=== Running Pagefind indexing ==="
    pnpm dlx pagefind --source 'public' --verbose
    
    echo "=== Build completed successfully ==="
  """
  publish = "public"

[build.environment]
  HUGO_VERSION = "0.152.1"
  GO_VERSION = "1.21.5"
  NODE_VERSION = "22"
  HUGO_ENABLEGITINFO = "true"
  HUGO_LOG_I18N_WARNINGS = "true"
  HUGO_LOG_WARNINGS = "true"
  FORCE_COLOR = "1"
  PNPM_LOG_LEVEL = "debug"

[context.production.environment]
  HUGO_ENV = "production"

[context.deploy-preview]
  command = """
    set -e
    echo "=== Deploy Preview Build ==="
    echo "Deploy URL: $DEPLOY_PRIME_URL"
    pnpm install --verbose
    hugo --gc --minify --buildFuture -b $DEPLOY_PRIME_URL --logLevel debug --printI18nWarnings --printPathWarnings
    pnpm dlx pagefind --source 'public' --verbose
  """

[context.branch-deploy]
  command = """
    set -e
    echo "=== Branch Deploy Build ==="
    echo "Deploy URL: $DEPLOY_PRIME_URL"
    pnpm install --verbose
    hugo --gc --minify -b $DEPLOY_PRIME_URL --logLevel debug --printI18nWarnings --printPathWarnings
    pnpm dlx pagefind --source 'public' --verbose
  """

# Post-processing optimizations
[build.processing]
  skip_processing = false

[build.processing.css]
  bundle = true
  minify = true

[build.processing.js]
  bundle = true
  minify = true

[build.processing.html]
  pretty_urls = true

[build.processing.images]
  compress = true

[[plugins]]
  package = "netlify-plugin-hugo-cache-resources"
  [plugins.inputs]
    debug = true

# Headers are defined in static/_headers file
# Redirects configuration
[[redirects]]
  from = "/author/robert-j.-dellinger"
  to = "/"
  status = 301

# Default 404 page
[[redirects]]
  from = "/*"
  to = "/404.html"
  status = 404

