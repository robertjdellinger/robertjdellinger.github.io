# Build and deploy a Hugo site to GitHub Pages with PR previews

name: Deploy Hugo site to Pages

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
    paths:
      - "**/*.md"
      - "content/**"
      - "assets/**"
      - "layouts/**"
      - "static/**"
      - "themes/**"
      - "hugo.*"
      - "config.*"
      - ".github/workflows/hugo.yml"
  workflow_dispatch:

# Default GITHUB_TOKEN permissions (tightened further at the job level)
permissions:
  contents: read

# Separate concurrency per ref so PR previews don't block main, and vice versa
concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build site
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      HUGO_VERSION: 0.128.0
      # Use a stable cache location that can be restored across runs
      HUGO_CACHEDIR: ${{ github.workspace }}/.hugo_cache

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Ensure full history for Hugo features like .Lastmod
          fetch-depth: 0
          submodules: recursive

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install Node.js dependencies (if present)
        run: |
          if [[ -f package-lock.json || -f npm-shrinkwrap.json ]]; then
            npm ci
          fi

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: ${{ env.HUGO_VERSION }}
          extended: true

      - name: Cache Hugo resources
        uses: actions/cache@v4
        with:
          path: |
            ./.hugo_cache
            ./resources
          key: ${{ runner.os }}-hugo-${{ env.HUGO_VERSION }}-${{ hashFiles('**/*.scss', '**/*.sass', 'hugo.*', 'config.*', 'package-lock.json', 'npm-shrinkwrap.json') }}
          restore-keys: |
            ${{ runner.os }}-hugo-${{ env.HUGO_VERSION }}-

      - name: Install Dart Sass
        run: npm i -g sass

      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
        run: |
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    name: Deploy to GitHub Pages (main)
    if: github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    # Restrict elevated perms only to where needed
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4

  deploy_preview:
    name: Deploy Preview (PR)
    if: github.event_name == 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy preview
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          preview: true
